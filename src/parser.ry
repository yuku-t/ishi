class Ishi::Parser
token NUMBER
prechigh
  left "*" "/"
  left "+" "-"
preclow
start expr
rule
  expr : expr "*" expr { result = Ishi::AST::MulOp.new([val[0], val[2]]) }
       | expr "/" expr { result = Ishi::AST::DivOp.new([val[0], val[2]]) }
       | expr "+" expr { result = Ishi::AST::AddOp.new([val[0], val[2]]) }
       | expr "-" expr { result = Ishi::AST::SubOp.new([val[0], val[2]]) }
       | factor

  factor : "(" expr ")" { result = val[1] }
         | NUMBER       { result = Ishi::AST::NumberLiteral.new(val[0]) }
end

---- header
require "ishi/ast"
require "ishi/lexer"

---- inner
def parse(readable)
  @lexer = Lexer.new(readable)
  do_parse
end

def next_token
  @lexer.next_token
end

# vim: set filetype=ruby :
