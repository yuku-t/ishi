#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require "ishi/ast"
require "ishi/lexer"

module Ishi
  class Parser < Racc::Parser

module_eval(<<'...end parser.ry/module_eval...', 'parser.ry', 23)
def parse(readable)
  @lexer = Lexer.new(readable)
  do_parse
end

def next_token
  @lexer.next_token
end

# vim: set filetype=ruby :
...end parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     5,     6,     5,     6,     7,     8,     5,     6,     3,
     3,     3,     3,     9,     3 ]

racc_action_check = [
     1,    13,    13,     1,     1,     1,     1,    12,    12,     6,
     5,     7,     8,     4,     0 ]

racc_action_pointer = [
    12,     0,   nil,   nil,    13,     8,     7,     9,    10,   nil,
   nil,   nil,     4,    -2 ]

racc_action_default = [
    -7,    -7,    -5,    -6,    -7,    -7,    -7,    -7,    -7,    14,
    -1,    -2,    -3,    -4 ]

racc_goto_table = [
     1,   nil,   nil,   nil,   nil,    10,    11,    12,    13 ]

racc_goto_check = [
     1,   nil,   nil,   nil,   nil,     1,     1,     1,     1 ]

racc_goto_pointer = [
   nil,     0,   nil ]

racc_goto_default = [
   nil,   nil,     2 ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 8, :_reduce_1,
  3, 8, :_reduce_2,
  3, 8, :_reduce_3,
  3, 8, :_reduce_4,
  1, 8, :_reduce_none,
  1, 9, :_reduce_6 ]

racc_reduce_n = 7

racc_shift_n = 14

racc_token_table = {
  false => 0,
  :error => 1,
  :NUMBER => 2,
  "*" => 3,
  "/" => 4,
  "+" => 5,
  "-" => 6 }

racc_nt_base = 7

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NUMBER",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "$start",
  "expr",
  "factor" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.ry', 8)
  def _reduce_1(val, _values, result)
     result = Ishi::AST::MulOp.new([val[0], val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 9)
  def _reduce_2(val, _values, result)
     result = Ishi::AST::DivOp.new([val[0], val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 10)
  def _reduce_3(val, _values, result)
     result = Ishi::AST::AddOp.new([val[0], val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 11)
  def _reduce_4(val, _values, result)
     result = Ishi::AST::SubOp.new([val[0], val[2]]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.ry', 14)
  def _reduce_6(val, _values, result)
     result = Ishi::AST::NumberLiteral.new(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Ishi
